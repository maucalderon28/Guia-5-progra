/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guia;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author mauca
 */
public class VentanaBenchmark extends javax.swing.JFrame {

    /**
     * Creates new form VentanaBenchmark
     */
    public VentanaBenchmark() {
        initComponents();
        jTextFieldCS.setEnabled(false);
        
        this.setSize(418, 550);
        this.setLocationRelativeTo(null);
        
           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitulo = new javax.swing.JLabel();
        jLabelNucleos = new javax.swing.JLabel();
        jLabelPantalla = new javax.swing.JLabel();
        jLabelRAM = new javax.swing.JLabel();
        jLabelGarantia = new javax.swing.JLabel();
        jLabelPrecio = new javax.swing.JLabel();
        jLabelMarca = new javax.swing.JLabel();
        jLabelCamaras = new javax.swing.JLabel();
        jTextFieldNucleos = new javax.swing.JTextField();
        jTextFieldPantalla = new javax.swing.JTextField();
        jTextFieldRAM = new javax.swing.JTextField();
        jTextFieldGarantia = new javax.swing.JTextField();
        jTextFieldPrecio = new javax.swing.JTextField();
        jComboBoxMarca = new javax.swing.JComboBox<>();
        jCheckBoxCP = new javax.swing.JCheckBox();
        jCheckBoxCS = new javax.swing.JCheckBox();
        jCheckBoxCF = new javax.swing.JCheckBox();
        jTextFieldCP = new javax.swing.JTextField();
        jTextFieldCS = new javax.swing.JTextField();
        jButtonEjecutar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaShow = new javax.swing.JTextArea();
        jButtonLimpiar = new javax.swing.JButton();
        jTextFieldBateria = new javax.swing.JTextField();
        jLabelBateria = new javax.swing.JLabel();
        jTextFieldPuntaje = new javax.swing.JTextField();
        jLabelPuntaje = new javax.swing.JLabel();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabelTitulo.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabelTitulo.setForeground(new java.awt.Color(240, 240, 240));
        jLabelTitulo.setText("Puntajes");
        getContentPane().add(jLabelTitulo);
        jLabelTitulo.setBounds(168, 11, 56, 18);

        jLabelNucleos.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNucleos.setText("Numero de nucleos del cpu");
        getContentPane().add(jLabelNucleos);
        jLabelNucleos.setBounds(10, 60, 140, 14);

        jLabelPantalla.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPantalla.setText("Tamaño de la pantalla");
        getContentPane().add(jLabelPantalla);
        jLabelPantalla.setBounds(10, 90, 130, 14);

        jLabelRAM.setForeground(new java.awt.Color(255, 255, 255));
        jLabelRAM.setText("Memoria RAM");
        getContentPane().add(jLabelRAM);
        jLabelRAM.setBounds(10, 120, 100, 14);

        jLabelGarantia.setForeground(new java.awt.Color(240, 240, 240));
        jLabelGarantia.setText("Tiempo de Garantia");
        getContentPane().add(jLabelGarantia);
        jLabelGarantia.setBounds(10, 150, 120, 14);

        jLabelPrecio.setForeground(new java.awt.Color(240, 240, 240));
        jLabelPrecio.setText("Precio");
        getContentPane().add(jLabelPrecio);
        jLabelPrecio.setBounds(10, 180, 50, 14);

        jLabelMarca.setForeground(new java.awt.Color(240, 240, 240));
        jLabelMarca.setText("Marca");
        getContentPane().add(jLabelMarca);
        jLabelMarca.setBounds(10, 250, 50, 14);

        jLabelCamaras.setForeground(new java.awt.Color(240, 240, 240));
        jLabelCamaras.setText("Camaras");
        getContentPane().add(jLabelCamaras);
        jLabelCamaras.setBounds(10, 281, 42, 14);

        jTextFieldNucleos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNucleosActionPerformed(evt);
            }
        });
        jTextFieldNucleos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNucleosKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNucleosKeyTyped(evt);
            }
        });
        getContentPane().add(jTextFieldNucleos);
        jTextFieldNucleos.setBounds(210, 50, 144, 20);

        jTextFieldPantalla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPantallaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPantallaKeyTyped(evt);
            }
        });
        getContentPane().add(jTextFieldPantalla);
        jTextFieldPantalla.setBounds(210, 80, 144, 20);

        jTextFieldRAM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldRAMKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldRAMKeyTyped(evt);
            }
        });
        getContentPane().add(jTextFieldRAM);
        jTextFieldRAM.setBounds(210, 110, 144, 20);

        jTextFieldGarantia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldGarantiaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldGarantiaKeyTyped(evt);
            }
        });
        getContentPane().add(jTextFieldGarantia);
        jTextFieldGarantia.setBounds(210, 140, 144, 20);

        jTextFieldPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPrecioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPrecioKeyTyped(evt);
            }
        });
        getContentPane().add(jTextFieldPrecio);
        jTextFieldPrecio.setBounds(210, 170, 144, 20);

        jComboBoxMarca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Google", "Lenovo", "Apple", "Nexus", "Huawei", "Sony", "Samsung", "LG", "Alcatel", "Nokia", "Motorola", "Xiaomi" }));
        getContentPane().add(jComboBoxMarca);
        jComboBoxMarca.setBounds(210, 250, 110, 20);

        jCheckBoxCP.setText("Principal");
        jCheckBoxCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxCPActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxCP);
        jCheckBoxCP.setBounds(100, 277, 80, 23);

        jCheckBoxCS.setText("Secundaria");
        jCheckBoxCS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxCSActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxCS);
        jCheckBoxCS.setBounds(198, 277, 90, 23);

        jCheckBoxCF.setText("Flash");
        getContentPane().add(jCheckBoxCF);
        jCheckBoxCF.setBounds(306, 277, 70, 23);
        getContentPane().add(jTextFieldCP);
        jTextFieldCP.setBounds(115, 318, 65, 20);
        getContentPane().add(jTextFieldCS);
        jTextFieldCS.setBounds(218, 318, 70, 20);

        jButtonEjecutar.setText("Ejecutar");
        jButtonEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEjecutarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEjecutar);
        jButtonEjecutar.setBounds(107, 349, 73, 23);

        jTextAreaShow.setColumns(20);
        jTextAreaShow.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextAreaShow.setRows(5);
        jTextAreaShow.setText("Puntaje menor o igual a 7:\n      El terminal no es buena inversión.\nPuntajes entre 7 y 14:\n       Es inversión de riesgo.\nPuntajes entre 15 y 21: \n      La inversión es viable\nPuntajes mayores a 22: \n      Es una buena inversión.");
        jScrollPane1.setViewportView(jTextAreaShow);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(28, 383, 186, 124);

        jButtonLimpiar.setText("Limpiar Todo");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonLimpiar);
        jButtonLimpiar.setBounds(198, 349, 120, 23);

        jTextFieldBateria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldBateriaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBateriaKeyTyped(evt);
            }
        });
        getContentPane().add(jTextFieldBateria);
        jTextFieldBateria.setBounds(210, 210, 144, 20);

        jLabelBateria.setForeground(new java.awt.Color(240, 240, 240));
        jLabelBateria.setText("Capacidad de Bateria");
        getContentPane().add(jLabelBateria);
        jLabelBateria.setBounds(10, 220, 140, 14);
        getContentPane().add(jTextFieldPuntaje);
        jTextFieldPuntaje.setBounds(232, 430, 158, 20);

        jLabelPuntaje.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelPuntaje.setForeground(new java.awt.Color(153, 153, 255));
        jLabelPuntaje.setText("Puntaje :");
        getContentPane().add(jLabelPuntaje);
        jLabelPuntaje.setBounds(235, 407, 117, 17);

        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/guia/fondo1jpg.jpg"))); // NOI18N
        getContentPane().add(jLabelFondo);
        jLabelFondo.setBounds(0, 0, 400, 520);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNucleosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNucleosActionPerformed
        if (jTextFieldNucleos.getText().isEmpty()==true) {
            jTextFieldNucleos.requestFocus();
        }
        
        
    }//GEN-LAST:event_jTextFieldNucleosActionPerformed

    private void jCheckBoxCSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCSActionPerformed
        if (jCheckBoxCS.isSelected()) {
            jTextFieldCS.setEnabled(true);
            jTextFieldCS.requestFocus();
            
        }
    }//GEN-LAST:event_jCheckBoxCSActionPerformed

    private void jTextFieldNucleosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNucleosKeyTyped
         int caracter=(int)evt.getKeyChar();
        char input=evt.getKeyChar();
         if (Character.isLetter(input) || (caracter>=32 && caracter<=47)) {
             evt.consume();
   
        }
        

       
         
    }//GEN-LAST:event_jTextFieldNucleosKeyTyped

    private void jButtonEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEjecutarActionPerformed
        int bateria,indexMarca,precio,garantia,cpu,ram,principal,secundaria;
        double pantalla;
        boolean flash;
        flash=jCheckBoxCF.isSelected();
        ClasePuntaje c= new ClasePuntaje();
        if (jCheckBoxCP.isSelected()==false) {
            principal=0;
        } else {
             principal=Integer.parseInt(jTextFieldCP.getText());
        }
        if (jCheckBoxCS.isSelected()==false) {
            secundaria=0;
        } else {
            secundaria=Integer.parseInt(jTextFieldCS.getText());
        }
        bateria=Integer.parseInt(jTextFieldBateria.getText());
        precio=Integer.parseInt(jTextFieldPrecio.getText());
        garantia=Integer.parseInt(jTextFieldGarantia.getText());
        cpu=Integer.parseInt(jTextFieldNucleos.getText());
        ram=Integer.parseInt(jTextFieldRAM.getText());
        pantalla=Double.parseDouble(jTextFieldPantalla.getText());
        indexMarca=jComboBoxMarca.getSelectedIndex();
        c.BateriaPantalla(bateria, pantalla);
        c.Marca(indexMarca);
        c.Garantia(garantia);
        c.Nucleos(cpu);
        c.RAM(ram);
        c.RangoPrecio(precio);
        c.pixelaje(principal, secundaria,flash);
        jTextFieldPuntaje.setText(c.EnviarPuntaje());
        
        
    }//GEN-LAST:event_jButtonEjecutarActionPerformed

    private void jTextFieldNucleosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNucleosKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER && jTextFieldNucleos.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Necesita llenar el campo");
        } else if (evt.getKeyCode()==KeyEvent.VK_ENTER && jTextFieldNucleos.getText().isEmpty()==false){
            jTextFieldNucleos.transferFocus();
        }
    }//GEN-LAST:event_jTextFieldNucleosKeyPressed

    private void jTextFieldPantallaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPantallaKeyTyped
                 char input=evt.getKeyChar();
         if (Character.isLetter(input)) {
             evt.consume();
         }
    }//GEN-LAST:event_jTextFieldPantallaKeyTyped

    private void jTextFieldPantallaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPantallaKeyPressed
         if (evt.getKeyCode()==KeyEvent.VK_ENTER && jTextFieldPantalla.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Necesita llenar el campo");
        } else if (evt.getKeyCode()==KeyEvent.VK_ENTER && jTextFieldPantalla.getText().isEmpty()==false){
            jTextFieldPantalla.transferFocus();
        }
    }//GEN-LAST:event_jTextFieldPantallaKeyPressed

    private void jTextFieldRAMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRAMKeyTyped
         char input=evt.getKeyChar();
         if (Character.isLetter(input)) {
             evt.consume();
         }
    }//GEN-LAST:event_jTextFieldRAMKeyTyped

    private void jTextFieldRAMKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRAMKeyPressed
         if (evt.getKeyCode()==KeyEvent.VK_ENTER && jTextFieldRAM.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Necesita llenar el campo");
        } else if (evt.getKeyCode()==KeyEvent.VK_ENTER && jTextFieldRAM.getText().isEmpty()==false){
            jTextFieldRAM.transferFocus();
        }
    }//GEN-LAST:event_jTextFieldRAMKeyPressed

    private void jTextFieldGarantiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldGarantiaKeyTyped
        char input=evt.getKeyChar();
         if (Character.isLetter(input)) {
             evt.consume();
         }
    }//GEN-LAST:event_jTextFieldGarantiaKeyTyped

    private void jTextFieldGarantiaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldGarantiaKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER && jTextFieldGarantia.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Necesita llenar el campo");
        } else if (evt.getKeyCode()==KeyEvent.VK_ENTER && jTextFieldGarantia.getText().isEmpty()==false){
            jTextFieldGarantia.transferFocus();
        }
    }//GEN-LAST:event_jTextFieldGarantiaKeyPressed

    private void jTextFieldPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPrecioKeyTyped
        char input=evt.getKeyChar();
         if (Character.isLetter(input)) {
             evt.consume();
         }
    }//GEN-LAST:event_jTextFieldPrecioKeyTyped

    private void jTextFieldPrecioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPrecioKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER && jTextFieldPrecio.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Necesita llenar el campo");
        } else if (evt.getKeyCode()==KeyEvent.VK_ENTER && jTextFieldPrecio.getText().isEmpty()==false){
            jTextFieldPrecio.transferFocus();
        }
    }//GEN-LAST:event_jTextFieldPrecioKeyPressed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        jTextFieldNucleos.setText("");
        jTextFieldPantalla.setText("");
        jTextFieldRAM.setText("");
        jTextFieldGarantia.setText("");
        jTextFieldCP.setText("");
        jTextFieldCS.setText("");
        jTextFieldPrecio.setText("");
        jCheckBoxCP.setSelected(false);
        jCheckBoxCS.setSelected(false);
        jCheckBoxCF.setSelected(false);
        jComboBoxMarca.setSelectedIndex(0);
        jTextFieldBateria.setText("");
        jTextFieldPuntaje.setText("");
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jTextFieldBateriaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBateriaKeyTyped
        char input=evt.getKeyChar();
         if (Character.isLetter(input)) {
             evt.consume();
         }
    }//GEN-LAST:event_jTextFieldBateriaKeyTyped

    private void jTextFieldBateriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBateriaKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER && jTextFieldBateria.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Necesita llenar el campo");
        } else if (evt.getKeyCode()==KeyEvent.VK_ENTER && jTextFieldBateria.getText().isEmpty()==false){
            jTextFieldBateria.transferFocus();
        }
    }//GEN-LAST:event_jTextFieldBateriaKeyPressed

    private void jCheckBoxCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCPActionPerformed
        
        if (jCheckBoxCP.isSelected()==true) {
            jTextFieldCP.requestFocus();
        }
        
    }//GEN-LAST:event_jCheckBoxCPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaBenchmark.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaBenchmark.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaBenchmark.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaBenchmark.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaBenchmark().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEjecutar;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JCheckBox jCheckBoxCF;
    private javax.swing.JCheckBox jCheckBoxCP;
    private javax.swing.JCheckBox jCheckBoxCS;
    private javax.swing.JComboBox<String> jComboBoxMarca;
    private javax.swing.JLabel jLabelBateria;
    private javax.swing.JLabel jLabelCamaras;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabelGarantia;
    private javax.swing.JLabel jLabelMarca;
    private javax.swing.JLabel jLabelNucleos;
    private javax.swing.JLabel jLabelPantalla;
    private javax.swing.JLabel jLabelPrecio;
    private javax.swing.JLabel jLabelPuntaje;
    private javax.swing.JLabel jLabelRAM;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaShow;
    private javax.swing.JTextField jTextFieldBateria;
    private javax.swing.JTextField jTextFieldCP;
    private javax.swing.JTextField jTextFieldCS;
    private javax.swing.JTextField jTextFieldGarantia;
    private javax.swing.JTextField jTextFieldNucleos;
    private javax.swing.JTextField jTextFieldPantalla;
    private javax.swing.JTextField jTextFieldPrecio;
    private javax.swing.JTextField jTextFieldPuntaje;
    private javax.swing.JTextField jTextFieldRAM;
    // End of variables declaration//GEN-END:variables
}

